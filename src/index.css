@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: hsl(240, 10%, 3.9%);
  --foreground: hsl(0, 0%, 98%);
  --muted: hsl(240, 3.7%, 15.9%);
  --muted-foreground: hsl(240, 5%, 64.9%);
  --popover: hsl(240, 10%, 3.9%);
  --popover-foreground: hsl(0, 0%, 98%);
  --card: hsl(240, 10%, 3.9%);
  --card-foreground: hsl(0, 0%, 98%);
  --border: hsl(240, 3.7%, 15.9%);
  --input: hsl(240, 3.7%, 15.9%);
  --primary: hsl(25, 95%, 53%);
  --primary-foreground: hsl(0, 0%, 98%);
  --secondary: hsl(240, 3.7%, 15.9%);
  --secondary-foreground: hsl(0, 0%, 98%);
  --accent: hsl(240, 3.7%, 15.9%);
  --accent-foreground: hsl(0, 0%, 98%);
  --destructive: hsl(0, 62.8%, 30.6%);
  --destructive-foreground: hsl(0, 0%, 98%);
  --ring: hsl(240, 4.9%, 83.9%);
  --radius: 0.5rem;
  
  /* Custom orange accent colors */
  --orange-50: hsl(33, 100%, 96%);
  --orange-100: hsl(34, 100%, 92%);
  --orange-200: hsl(32, 98%, 83%);
  --orange-300: hsl(31, 97%, 72%);
  --orange-400: hsl(27, 96%, 61%);
  --orange-500: hsl(25, 95%, 53%);
  --orange-600: hsl(21, 90%, 48%);
  --orange-700: hsl(17, 88%, 40%);
  --orange-800: hsl(15, 79%, 34%);
  --orange-900: hsl(15, 75%, 28%);
}

.dark {
  --background: hsl(240, 10%, 3.9%);
  --foreground: hsl(0, 0%, 98%);
  --muted: hsl(240, 3.7%, 15.9%);
  --muted-foreground: hsl(240, 5%, 64.9%);
  --popover: hsl(240, 10%, 3.9%);
  --popover-foreground: hsl(0, 0%, 98%);
  --card: hsl(240, 10%, 3.9%);
  --card-foreground: hsl(0, 0%, 98%);
  --border: hsl(240, 3.7%, 15.9%);
  --input: hsl(240, 3.7%, 15.9%);
  --primary: hsl(25, 95%, 53%);
  --primary-foreground: hsl(0, 0%, 98%);
  --secondary: hsl(240, 3.7%, 15.9%);
  --secondary-foreground: hsl(0, 0%, 98%);
  --accent: hsl(240, 3.7%, 15.9%);
  --accent-foreground: hsl(0, 0%, 98%);
  --destructive: hsl(0, 62.8%, 30.6%);
  --destructive-foreground: hsl(0, 0%, 98%);
  --ring: hsl(240, 4.9%, 83.9%);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
    font-family: 'Inter', system-ui, sans-serif;
    background: linear-gradient(135deg, hsl(240, 10%, 3.9%) 0%, hsl(240, 8%, 6%) 100%);
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-bold;
  }

  .font-mono {
    font-family: 'JetBrains Mono', 'Consolas', monospace;
  }
}

@layer components {
  .hero-gradient {
    background: radial-gradient(ellipse 80% 50% at 50% -20%, hsla(25, 95%, 53%, 0.15), transparent);
  }

  .glass-effect {
    background: hsla(0, 0%, 100%, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid hsla(0, 0%, 100%, 0.1);
  }

  .terminal-effect {
    background: linear-gradient(145deg, hsl(240, 10%, 6%), hsl(240, 8%, 10%));
    border: 1px solid hsl(240, 3.7%, 20%);
    box-shadow: inset 0 1px 0 hsla(0, 0%, 100%, 0.1);
  }

  .code-highlight {
    background: linear-gradient(90deg, transparent, hsla(25, 95%, 53%, 0.1), transparent);
  }

  .orange-glow {
    box-shadow: 0 0 20px hsla(25, 95%, 53%, 0.3);
  }

  .orange-glow-hover:hover {
    box-shadow: 0 0 30px hsla(25, 95%, 53%, 0.4), 0 0 60px hsla(25, 95%, 53%, 0.2);
  }
}

@layer utilities {
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
  }

  .animate-pulse-slow {
    animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  .text-gradient-orange {
    background: linear-gradient(135deg, hsl(25, 95%, 53%), hsl(21, 90%, 48%));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

@keyframes glow {
  0% { box-shadow: 0 0 20px hsl(25, 95%, 53%); }
  100% { box-shadow: 0 0 40px hsl(25, 95%, 53%), 0 0 60px hsl(25, 95%, 53%); }
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: hsl(240, 10%, 3.9%);
}

::-webkit-scrollbar-thumb {
  background: hsl(25, 95%, 53%);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: hsl(21, 90%, 48%);
}


/* Add this to your main.css file, either in the base layer or utilities */

@layer base {
  /* Default cursor for most elements */
  html {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23f97316" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/></svg>'), auto;
  }
  
  /* Pointer cursor for clickable elements */
  a, button, [role="button"], [type="button"], [type="submit"] {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="%23f97316" stroke="%23f97316" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"><path d="M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122"/></svg>'), pointer;
  }
  
  /* Text cursor for input fields and content editable */
  input, textarea, [contenteditable] {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23f97316" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 20h9M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"/></svg>'), text;
  }
  
  /* Grab cursor for draggable elements */
  [draggable="true"] {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23f97316" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="3"/><path d="M19 12h2M12 19v2M12 5v2M5 12h2"/></svg>'), grab;
  }
  
  /* Grabbing cursor when actively dragging */
  [draggable="true"]:active {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23f97316" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="3"/><path d="M19 12h2M12 19v2M12 5v2M5 12h2"/></svg>'), grabbing;
  }
  
  /* Loading cursor */
  .cursor-wait {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23f97316" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12a9 9 0 1 1-6.219-8.56"/></svg>'), wait;
  }
}

/* Or as utility classes if you prefer */
@layer utilities {
  .cursor-custom {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23f97316" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/></svg>'), auto;
  }
  
  .cursor-custom-pointer {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="%23f97316" stroke="%23f97316" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"><path d="M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122"/></svg>'), pointer;
  }
  
  .cursor-custom-text {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23f97316" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 20h9M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"/></svg>'), text;
  }
  
  .cursor-custom-grab {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23f97316" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="3"/><path d="M19 12h2M12 19v2M12 5v2M5 12h2"/></svg>'), grab;
  }
  
  .cursor-custom-grabbing {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23f97316" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="3"/><path d="M19 12h2M12 19v2M12 5v2M5 12h2"/></svg>'), grabbing;
  }
  
  .cursor-custom-wait {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="%23f97316" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12a9 9 0 1 1-6.219-8.56"/></svg>'), wait;
  }
}
